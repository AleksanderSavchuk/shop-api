name: ci

on:
  push:
    branches:
      - 'master'

env:
  AWS_REGION: us-east-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: 860864950549.dkr.ecr.us-east-2.amazonaws.com/test_repo           # set this to your Amazon ECR repository name
  ECS_SERVICE: first-run-task-definition                 # set this to your Amazon ECS service name
  ECS_CLUSTER: default                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json  # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: first-run-task-definition # custom           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: alexsavchukds/test_app:latest
      -
          name: Test
          runs-on: ubuntu-latest
          services:
            postgres:
              image: postgres:12.8
              env:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: postgres
              ports: ['5432:5432']
              # will assign a random free host port
              # - 5432/tcp
              # needed because the postgres container does not provide a healthcheck
              options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

          steps:
          - uses: actions/checkout@v2
          - name: Set up Ruby 3.0
            uses: actions/setup-ruby@v1
            with:
              ruby-version: 3.0
          - name: Build and test with Rake
            env:
              # DATABASE_URL: postgres://postgres:Password1@database-2.c2nyzycvmepg.us-east-2.rds.amazonaws.com:5432/shop_api_db
              DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
              AWS_REGION: us-east-2
              AWS_S3_BUCKET: test-shop-api-bucket
            run: |
              sudo apt-get -yqq install libpq-dev
              gem install bundler
              bundle install --jobs 4 --retry 3
              bundle exec rails db:create
              rails active_storage:update
              bundle exec rails db:migrate
              bundle exec bin/rails db:environment:set RAILS_ENV=test
              bundle exec rspec
